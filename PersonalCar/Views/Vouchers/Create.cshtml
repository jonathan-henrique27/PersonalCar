@model PersonalCar.Models.Domains.Voucher

@{
    ViewData["Title"] = "Voucher";

}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-8">
            <form id="" asp-action="Create">
                <h3 style="font-weight:bold;">@ViewData["Title"]</h3>
                <hr />
                <div class="column" style="padding:15px;">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.ControleDeTaxiamento, "Taxiamento Nº", new { @class = "col-sm-12 col-form-label font-weight-bold" })
                        <div class="col-lg-10">
                            @Html.EditorFor(model => model.ControleDeTaxiamento, new { htmlAttributes = new { @class = "form-control form-control-sm", @readonly = "readonly", @style = "  border-radius: 10px;" } })
                            @Html.ValidationMessageFor(model => model.ControleDeTaxiamento, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Cliente.NomeFantasia, htmlAttributes: new { @class = "col-sm-12 col-form-label font-weight-bold" })
                        <div class="col-md-10">
                            @Html.DropDownList("Clientes", null, "Selecione o Cliente", new { @class = "form-control", @style = "border-radius: 10px;" })
                            @Html.ValidationMessageFor(model => model.Cliente.NomeFantasia, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UnidadeDeNegocio.NomeFantasia, htmlAttributes: new { @class = "col-sm-12 col-form-label font-weight-bold" })
                        <div class="col-md-10">
                            @Html.DropDownList("Unidades", new SelectList(Enumerable.Empty<SelectListItem>()) , null, new { @class = "form-control", @style = "border-radius: 10px;" })
                            @Html.ValidationMessageFor(model => model.UnidadeDeNegocio.NomeFantasia, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Solicitante.Nome, htmlAttributes: new { @class = "col-sm-12 col-form-label font-weight-bold" })
                        <div class="col-md-10">
                            @Html.DropDownList("Solicitantes", new SelectList(Enumerable.Empty<SelectListItem>()), null, new { @class = "form-control", @style = "border-radius: 10px;" })
                            @Html.ValidationMessageFor(model => model.Solicitante.Nome, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CentroDeCusto.Nome, htmlAttributes: new { @class = "col-sm-12 col-form-label font-weight-bold" })
                        <div class="col-lg-10">
                            @Html.EditorFor(model => model.CentroDeCusto.Nome, new { htmlAttributes = new { @class = "form-control", @style = "  border-radius: 10px;" } })
                            @Html.ValidationMessageFor(model => model.CentroDeCusto.Nome, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DataSolicitacao, htmlAttributes: new { @class = "col-sm-12 col-form-label font-weight-bold" })
                        <div id="box" class="col-lg-10">
                            @Html.EditorFor(model => model.DataSolicitacao, new { htmlAttributes = new { @class = "form-control", @style = "  border-radius: 10px;" } })
                            @Html.ValidationMessageFor(model => model.DataSolicitacao, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DataInicial, htmlAttributes: new { @class = "col-sm-12 col-form-label font-weight-bold" })
                        <div id="box" class="col-lg-10">
                            @Html.EditorFor(model => model.DataInicial, new { htmlAttributes = new { @class = "form-control", @style = "  border-radius: 10px;" } })
                            @Html.ValidationMessageFor(model => model.DataInicial, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DataFinal, htmlAttributes: new { @class = "col-sm-12 col-form-label font-weight-bold" })
                        <div class="col-lg-10">
                            @Html.EditorFor(model => model.DataFinal, new { htmlAttributes = new { @class = "form-control", @style = "  border-radius: 10px;" } })
                            @Html.ValidationMessageFor(model => model.DataFinal, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Passageiros, htmlAttributes: new { @class = "col-sm-12 col-form-label font-weight-bold" })
                        <div class="col-lg-10">
                            @Html.EditorFor(model => model.Passageiros, new { htmlAttributes = new { @class = "form-control", @style = "  border-radius: 10px;" } })
                            @Html.ValidationMessageFor(model => model.Passageiros, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Motorista.Nome, htmlAttributes: new { @class = "col-sm-12 col-form-label font-weight-bold" })
                        <div class="col-lg-10">
                            @Html.EditorFor(model => model.Motorista.Nome, new { htmlAttributes = new { @class = "form-control", @style = "border-radius: 10px;" } })
                            @Html.ValidationMessageFor(model => model.Motorista.Nome, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Veiculo.Modelo, htmlAttributes: new { @class = "col-sm-12 col-form-label font-weight-bold" })
                        <div class="col-lg-10">

                            @Html.EditorFor(model => model.Veiculo.Modelo, new { htmlAttributes = new { @class = "form-control", @style = "  border-radius: 10px;" } })
                            @Html.ValidationMessageFor(model => model.Veiculo.Modelo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Placa, htmlAttributes: new { @class = "col-sm-12 col-form-label font-weight-bold" })
                        <div class="col-lg-10">
                            @Html.EditorFor(model => model.Placa, new { htmlAttributes = new { @class = "form-control", @style = "  border-radius: 10px;" } })
                            @Html.ValidationMessageFor(model => model.Placa, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.KmInicial, htmlAttributes: new { @class = "col-sm-12 col-form-label font-weight-bold" })
                        <div class="col-lg-10">
                            @Html.EditorFor(model => model.KmInicial, new { htmlAttributes = new { @class = "form-control", @style = "  border-radius: 10px;" } })
                            @Html.ValidationMessageFor(model => model.KmInicial, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.KmFinal, htmlAttributes: new { @class = "col-sm-12 col-form-label font-weight-bold" })
                        <div class="col-lg-10">
                            @Html.EditorFor(model => model.KmFinal, new { htmlAttributes = new { @class = "form-control", @style = "  border-radius: 10px;" } })
                            @Html.ValidationMessageFor(model => model.KmFinal, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.HorasParado, htmlAttributes: new { @class = "col-sm-12 col-form-label font-weight-bold" })
                        <div class="col-lg-10">
                            @Html.EditorFor(model => model.HorasParado, new { htmlAttributes = new { @class = "form-control", @style = "  border-radius: 10px;" } })
                            @Html.ValidationMessageFor(model => model.HorasParado, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ValorPedagio, htmlAttributes: new { @class = "col-sm-12 col-form-label font-weight-bold" })
                        <div class="col-lg-10">
                            @Html.EditorFor(model => model.ValorPedagio, new { htmlAttributes = new { @class = "form-control", @style = "  border-radius: 10px;" } })
                            @Html.ValidationMessageFor(model => model.ValorPedagio, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ValorEstacionamento, htmlAttributes: new { @class = "col-sm-12 col-form-label font-weight-bold", @style = "display: inline-block; " })
                        <div class="col-lg-10">
                            @Html.EditorFor(model => model.ValorEstacionamento, new { htmlAttributes = new { @class = "form-control", @style = "  border-radius: 10px;" } })
                            @Html.ValidationMessageFor(model => model.ValorEstacionamento, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ValorTotalDaViagem, htmlAttributes: new { @class = "col-sm-12 col-form-label font-weight-bold" })
                        <div class="col-lg-10">
                            @Html.EditorFor(model => model.ValorTotalDaViagem, new { htmlAttributes = new { @class = "form-control", @style = "  border-radius: 10px;" } })
                            @Html.ValidationMessageFor(model => model.ValorTotalDaViagem, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <input type="submit" id="botao" value="Create" class="btn btn-primary float-sm-right" />
                    </div>

                </div>
            </form>
        </div>
    </div>
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

<script type="text/javascript">

        $(document).ready(function () {

            $("#Clientes").change(function () {
                $("#Unidades").empty();
                $("#Solicitantes").empty();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("CarregarUnidades")',

                    dataType: 'json',

                    data: { id: $("#Clientes").val() },

                    success: function (unidades) {
                        $("#Unidades").append('<option value="' + -1 + '">' + "Selecione a Unidade" + '</option>');

                        $.each(unidades, function (i, unidade) {
                            $("#Unidades").append('<option value="' + unidade.value + '">' + unidade.text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Falha ao recuperar unidades.' + ex);
                    }
                });
                return false;
            })

            $("#Unidades").change(function () {
                $("#Solicitantes").empty();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("CarregarSolicitantes")',

                    dataType: 'json',

                    data: { id: $("#Unidades").val() },

                    success: function (solicitantes) {
                        $("#Solicitantes").append('<option value="' + -1 + '">' + "Selecione o Solicitante" + '</option>');

                        $.each(solicitantes, function (i, solicitante) {
                            $("#Solicitantes").append('<option value="' + solicitante.value + '">' + solicitante.text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Falha ao recuperar solicitantes .' + ex);
                    }
                });
                return false;
            });

        })
</script>
}